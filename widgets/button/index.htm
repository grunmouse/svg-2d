<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

	<head>
		<title>KevLinDev - GUI - Widgets</title>
		<link href="../../../common/kevlindev.css" type="text/css" rel="stylesheet" />
		<meta http-equiv="content-type" content="text/html;charset=utf-8" />
	</head>

	<body>
		<div id="logo"></div>
		<p id="path"><a href="../../../index.htm">Home</a> :: <a href="../../index.htm">GUI</a> :: Widgets</p>
		<div id="toc">
			<ol>
				<li type="I"><a href="#Anchor-Introductio-56463">Introduction </a></li>
				<li type="I"><a href="#Anchor-Referenc-301">Reference </a></li>
				<ol>
					<li type="A"><a href="#Anchor-Globa-5338">Global Methods </a></li>
					<ol>
						<li type="i"><a href="#Anchor-ButtonDow-9434">ButtonDown</a></li>
					</ol>
					<li type="A"><a href="#Anchor-Clas-14301">Class Variables</a></li>
					<ol>
						<li type="i"><a href="#Anchor-Butto-19498">VERSION </a></li>
						<li type="i"><a href="#Anchor-Butto-23945">buttons </a></li>
					</ol>
					<li type="A"><a href="#Anchor-Clas-31856">Class Methods</a></li>
					<ol>
						<li type="i"><a href="#Anchor-Butto-49952">Find_Button</a></li>
					</ol>
					<li type="A"><a href="#Anchor-Method-56361">Methods </a></li>
					<ol>
						<li type="i"><a href="#Anchor-constructo-62851">constructor </a></li>
						<li type="i"><a href="#Anchor-mak-4265">make_button</a></li>
						<li type="i"><a href="#Anchor-se-9188">set_select</a></li>
					</ol>
					<li type="A"><a href="#Anchor-Propertie-63962">Properties </a></li>
					<ol>
						<li type="i"><a href="#Anchor-13728">x </a></li>
						<li type="i"><a href="#Anchor-22941">y </a></li>
						<li type="i"><a href="#Anchor-callbac-33236">callback</a></li>
						<li type="i"><a href="#Anchor-paren-41447">parent </a></li>
						<li type="i"><a href="#Anchor-selecte-45553">selected</a></li>
						<li type="i"><a href="#Anchor-50711">up</a></li>
						<li type="i"><a href="#Anchor-dow-56089">down</a></li>
					</ol>
				</ol>
				<li type="I"><a href="#Anchor-Us-61727">Use </a></li>
				<ol>
					<li type="A"><a href="#Anchor-Loadin-14006">Loading Button into your SVG Document</a></li>
					<li type="A"><a href="#Anchor-Creatin-28287">Creating a Button</a></li>
					<li type="A"><a href="#Anchor-Settin-44160">Setting the Button State</a></li>
					<li type="A"><a href="#Anchor-Exampl-48245">Example </a></li>
				</ol>
				<li type="I"><a href="#Anchor-Downloa-53383">Download </a></li>
			</ol>
		</div>
		<div id="simple-content">
			<h2><a name="Anchor-Introductio-56463"></a>Introduction</h2>
			<p>The Button class is a first attempt at the creation of a reusable button widget. With the current implementation, it is possible to simulate push buttons, radio buttons, and check boxes.</p>
			<p>The Button class uses the same technique to create the button elements as was introduced in the Slider class. The button states are defined in the &lt;defs&gt; section of the SVG document. As a new button created, these elements are cloned and appended to the user-specified location with in the SVG DOM.</p>
			<p>Future versions of the Button class will incorporate the necessary functionality to create the various button types.</p>
			<hr />
			<h2><a name="Anchor-Referenc-301"></a>Reference</h2>
			<h3><a name="Anchor-Globa-5338"></a>Global Methods</h3>
			<p><a name="Anchor-ButtonDow-9434"></a>ButtonDown(<i>event</i>);</p>
			<ul>
				<p>ButtonDown() is an event handler that is called when the mouse button is pressed over the button graphics. Currently, this method fires the callback associated with the button if a callback is defined. This functionality may be moved in a future version of the Button class.</p>
				<p><b>event</b> is the event object generated by the mousedown event.</p>
			</ul>
			<h3><a name="Anchor-Clas-14301"></a>Class Variables</h3>
			<p><a name="Anchor-Butto-19498"></a>Button.VERSION</p>
			<blockquote>
				<p>This is a number which represents the current version number for this implementation of the Button class. This can be used by scripts to check that the correct version of the class is being used.</p>
			</blockquote>
			<p><a name="Anchor-Butto-23945"></a>Button.buttons</p>
			<ul>
				<p>An array of Button objects used to find the currently active button object.</p>
			</ul>
			<h3><a name="Anchor-Clas-31856"></a>Class Methods</h3>
			<p><a name="Anchor-Butto-49952"></a>Button.Find_Button(<i>button</i>) - returns the currently active button object</p>
			<ul>
				<p>This class method is responsible for finding the currently active button in the buttons global variable.</p>
				<p><b>button</b> is the parent &lt;g&gt; element of the button that generated the mouse event.</p>
			</ul>
			<h3><a name="Anchor-Method-56361"></a>Methods</h3>
			<p><a name="Anchor-constructo-62851"></a>constructor - new Button(<i>x_position, y_position, callback, up_id, down_id, parent</i>);</p>
			<blockquote>
				<p>This method is used to create a new Button object. The constructor will call the make_button() method to create the graphics used to represent the button.</p>
			</blockquote>
			<ul>
				<p><b>x_position</b> is a number which defines the x position of the origin of the button</p>
				<p><b>y_position</b> is a number which defines the y position of the origin of the button</p>
				<p><b>callback</b> is a function reference which will be called each time the button is clicked.</p>
				<p><b>up_id</b> is the id of the node that represents the button in the off or up state.</p>
				<p><b>down_id</b> is the id of the node that represents the button in the on or down state.</p>
				<p><b>parent</b> is the node to which the button graphics will be appended.</p>
			</ul>
			<p><a name="Anchor-mak-4265"></a>make_button(<i>up_id, down_id</i>);</p>
			<ul>
				<p>make_button() locates the up and down button nodes based on the id's passed into the routine. Each button element is given a unique id to allow Find_Button() to determine the currently active button object.</p>
				<p><b>up_id</b> is the id of the node that represents the button in the off or up state.</p>
				<p><b>down_id</b> is the id of the node that represents the button in the on or down state.</p>
			</ul>
			<p><a name="Anchor-se-9188"></a>set_select(<i>state</i>);</p>
			<blockquote>
				<p>set_select() sets the current state of the button based on the value specified in the parameter list. If the button is not in the state specified, the state is changed and the callback is fired.</p>
				<p><b>state</b> is state to which the button will be set</p>
			</blockquote>
			<h3><a name="Anchor-Propertie-63962"></a>Properties</h3>
			<ul>
				<p><a name="Anchor-13728"></a><b>x</b> is the x coordinate of the upper-lefthand corner of the slider</p>
				<p><a name="Anchor-22941"></a><b>y</b> is the y coordinate of the upper-lefthand corner of the slider</p>
				<p><a name="Anchor-callbac-33236"></a><b>callback</b> is a function reference that will be called when a button changes state</p>
				<p><a name="Anchor-paren-41447"></a><b>parent</b> is the parent node of the slider graphics. This can be used to delete the slider from the SVG document.</p>
				<p><a name="Anchor-selecte-45553"></a><b>selected</b> is a Boolean value that represents the current state of the button.</p>
				<p><a name="Anchor-50711"></a><b>up</b> is the node that represents the button in the off or up state.</p>
				<p><a name="Anchor-dow-56089"></a><b>down</b> is the node that represents the button in the on or down state.</p>
			</ul>
			<hr />
			<h2><a name="Anchor-Us-61727"></a>Use</h2>
			<h3><a name="Anchor-Loadin-14006"></a>Loading Button into your SVG document</h3>
			<p>In order to use the Button class in your SVG file, you will need to insert a &lt;script&gt; element inside of your &lt;svg&gt; element. As an example, if Button.js is in the same directory as your SVG document, then you would include the Button class with the following text:</p>
			<ul>
				<p>&lt;script xlink:href=&quot;Button.js&quot; /&gt;</p>
			</ul>
			<h3><a name="Anchor-Creatin-28287"></a>Creating a Button</h3>
			<p>In order to create a new Button object, you need to know the following: the coordinate where to place the origin of the button, a callback function, the id of the button's off graphics, the id of the button's on graphics, and the parent node of the button. The following line creates a button at (50,200), appends it to the <a href="../../../tutorials/basics/miscellaneous/root/index.htm">SVGRoot</a>. The button will use my_callback() as the callback function and the &quot;button_up&quot; and &quot;button_down&quot; elements to draw the states of the button.</p>
			<pre>button = new Button(
    50, 200,
    my_callback,,button_updy&quot;,button_downmb, SVGRoot&quot;);</pre>
			<h3><a name="Anchor-Settin-44160"></a>Setting the Button State</h3>
			<p>Sometimes it is necessary to have another function change the value of your button object. In order to perform this function, you would use something like the following:</p>
			<pre>slider.set_select(true);</pre>
			<p>In this example, the button will be set to the on position.</p>
			<h3><a name="Anchor-Exampl-48245"></a>Example</h3>
			<p>The following example shows multiple types of buttons: push buttons, radio buttons, and check boxes. To see the complete details of this example, right-click (or control-click) the SVG file and View Source. Viewing the source will show you how the various button types and button states are defined in the &lt;defs&gt; section of the SVG document.</p>
			<div align="center">
				<embed src="button.svg" width="455" height="310" type="image/svg+xml" /></div>
			<hr />
			<h2><a name="Anchor-Downloa-53383"></a>Download</h2>
			<p><a href="Button.js">Button.js</a></p>
		</div>
		<div id="footer">
			<p class="copyright">Copyright 2000-2003, Kevin Lindsey</p>
		</div>
	</body>

</html>
